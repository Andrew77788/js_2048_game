{"mappings":"A,I,E,E,C,ECKA,MAAM,EAAO,G,C,A,C,ECHb,MACE,YAAY,EAAO,CAAC,CAAE,CACpB,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,CAEf,CAEA,aAAc,CACZ,OAAO,MAAM,IAAI,CAAC,IAAI,EACnB,IAAI,GACJ,GAAG,CAAC,IAAM,MAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GACrC,CAEA,SAAU,CACR,IAAM,EAAa,EAAE,CAErB,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACjC,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACJ,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,EACtB,EAAW,IAAI,CAAC,CAAE,IAAA,EAAK,IAAA,CAAI,GAKjC,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,GAAM,CAAA,IAAE,CAAG,CAAA,IAAE,CAAG,CAAE,CAChB,CAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAAE,AAE3D,CAAA,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACnD,CACF,CAEA,UAAW,CACT,IAAI,EAAQ,CAAA,EAEZ,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IAAO,CACxC,IAAI,EAAS,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,MAAM,CAAC,AAAC,GAAQ,GAE7C,IAAK,IAAI,EAAM,EAAG,EAAM,EAAO,MAAM,CAAG,EAAG,IACrC,CAAM,CAAC,EAAI,GAAK,CAAM,CAAC,EAAM,EAAE,GACjC,CAAM,CAAC,EAAI,EAAI,EACf,IAAI,CAAC,KAAK,EAAI,CAAM,CAAC,EAAI,CACzB,CAAM,CAAC,EAAM,EAAE,CAAG,EAClB,EAAQ,CAAA,GAKZ,IAFA,EAAS,EAAO,MAAM,CAAC,AAAC,GAAQ,GAEzB,EAAO,MAAM,CAAG,IAAI,CAAC,IAAI,EAC9B,EAAO,IAAI,CAAC,GAGT,GACH,CAAA,EAAQ,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,QAAQ,KAAO,EAAO,QAAQ,EADxD,EAGA,IAAI,CAAC,KAAK,CAAC,EAAI,CAAG,CACpB,CAEA,OAAO,CACT,CAEA,WAAY,CACV,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,GAAQ,EAAI,OAAO,IAEhD,IAAM,EAAQ,IAAI,CAAC,QAAQ,GAI3B,OAFA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,GAAQ,EAAI,OAAO,IAEzC,CACT,CAEA,QAAS,CACP,IAAI,CAAC,SAAS,GAEd,IAAM,EAAQ,IAAI,CAAC,QAAQ,GAI3B,OAFA,IAAI,CAAC,SAAS,GAEP,CACT,CAEA,UAAW,CACT,IAAI,CAAC,SAAS,GAEd,IAAM,EAAQ,IAAI,CAAC,SAAS,GAI5B,OAFA,IAAI,CAAC,SAAS,GAEP,CACT,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CAEA,WAAY,QACV,AAAI,IAAI,CAAC,QAAQ,GACR,MAGL,IAAI,CAAC,UAAU,GACV,OAGF,SACT,CAEA,OAAQ,CACN,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,UAEd,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GAEZ,IAAI,CAAC,WAAW,GAEhB,SAAS,aAAa,CAAC,gBAAgB,SAAS,CAAC,GAAG,CAAC,UACrD,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,GAAG,CAAC,UACtD,SAAS,aAAa,CAAC,kBAAkB,SAAS,CAAC,GAAG,CAAC,UAEvD,SAAS,aAAa,CAAC,UAAU,WAAW,CAAG,SACjD,CAEA,SAAU,CACR,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,WAAW,GAChB,SAAS,aAAa,CAAC,gBAAgB,SAAS,CAAC,GAAG,CAAC,UACrD,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,GAAG,CAAC,SACxD,CAEA,aAAc,CACZ,IAAM,EAAQ,SAAS,gBAAgB,CAAC,eACpC,EAAI,EAER,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACjC,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACjC,CAAK,CAAC,EAAE,CAAC,WAAW,CAClB,AAAyB,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAS,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,GACtD,CAAK,CAAC,EAAE,CAAC,SAAS,CAAG,aAEQ,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,EACtB,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAC,CAAC,EAE9D,GAGJ,CAAA,SAAS,aAAa,CAAC,eAAe,WAAW,CAAG,IAAI,CAAC,KAAK,AAChE,CAEA,WAAY,CACV,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAG,IACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,GAAQ,CAAG,CAAC,EAAS,EACzC,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC,GAAQ,EAAI,QAAQ,CAAC,MAC/C,CAEA,YAAa,CACX,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACjC,IAAK,IAAI,EAAM,EAAG,EAAM,IAAI,CAAC,IAAI,CAAE,IACjC,GAA6B,IAAzB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,EAKtB,EAAM,IAAI,CAAC,IAAI,CAAG,GAClB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAM,EAAE,EAMjD,EAAM,IAAI,CAAC,IAAI,CAAG,GAClB,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,GAAK,IAAI,CAAC,KAAK,CAAC,EAAM,EAAE,CAAC,EAAI,CAZjD,MAAO,CAAA,EAmBb,MAAO,CAAA,CACT,CAEA,KAAK,CAAS,CAAE,CACd,IAAI,EAAQ,CAAA,EAEZ,OAAQ,GACN,IAAK,YACH,EAAQ,IAAI,CAAC,QAAQ,GACrB,KACF,KAAK,aACH,EAAQ,IAAI,CAAC,SAAS,GACtB,KACF,KAAK,UACH,EAAQ,IAAI,CAAC,MAAM,GACnB,KACF,KAAK,YACH,EAAQ,IAAI,CAAC,QAAQ,EAEzB,CAEA,GAAI,EAAO,CACT,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,WAAW,GAEhB,IAAM,EAAO,IAAI,CAAC,SAAS,EAEvB,AAAS,CAAA,QAAT,EACF,SAAS,aAAa,CAAC,gBAAgB,SAAS,CAAC,MAAM,CAAC,UACtC,SAAT,GACT,SAAS,aAAa,CAAC,iBAAiB,SAAS,CAAC,MAAM,CAAC,SAE7D,CACF,CACF,G,U,C,E,O,C,C,ED1NA,EAAK,WAAW,GAGhB,SAAS,gBAAgB,CAAC,UAAW,AAAC,IAGhC,AAFgB,CAAC,YAAa,aAAc,UAAW,YAAY,CAEvD,QAAQ,CAAC,MAAM,GAAG,GAChC,EAAK,IAAI,CAAC,EAAE,GAAG,CAEnB,GAEA,SAAS,aAAa,CAAC,UAAU,gBAAgB,CAAC,QAAS,KACzD,EAAK,KAAK,EACZ","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(size = 4){\n        this.size = size;\n        this.board = this.createBoard();\n        this.score = 0;\n    // this.start();\n    }\n    createBoard() {\n        return Array(this.size).fill().map(()=>Array(this.size).fill(0));\n    }\n    addTile() {\n        const emptyTiles = [];\n        for(let row = 0; row < this.size; row++){\n            for(let col = 0; col < this.size; col++)if (this.board[row][col] === 0) emptyTiles.push({\n                row: row,\n                col: col\n            });\n        }\n        if (emptyTiles.length > 0) {\n            const { row: row, col: col } = emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n            this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n        }\n    }\n    moveLeft() {\n        let moved = false;\n        for(let row = 0; row < this.size; row++){\n            let newRow = this.board[row].filter((val)=>val);\n            for(let col = 0; col < newRow.length - 1; col++)if (newRow[col] === newRow[col + 1]) {\n                newRow[col] *= 2;\n                this.score += newRow[col];\n                newRow[col + 1] = 0;\n                moved = true;\n            }\n            newRow = newRow.filter((val)=>val);\n            while(newRow.length < this.size)newRow.push(0);\n            if (!moved) moved = this.board[row].toString() !== newRow.toString();\n            this.board[row] = newRow;\n        }\n        return moved;\n    }\n    moveRight() {\n        this.board = this.board.map((row)=>row.reverse());\n        const moved = this.moveLeft();\n        this.board = this.board.map((row)=>row.reverse());\n        return moved;\n    }\n    moveUp() {\n        this.transpose();\n        const moved = this.moveLeft();\n        this.transpose();\n        return moved;\n    }\n    moveDown() {\n        this.transpose();\n        const moved = this.moveRight();\n        this.transpose();\n        return moved;\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.board;\n    }\n    getStatus() {\n        if (this.checkWin()) return \"win\";\n        if (this.isGameOver()) return \"lose\";\n        return \"playing\";\n    }\n    start() {\n        this.board = this.createBoard();\n        this.score = 0;\n        this.status = \"playing\";\n        this.addTile();\n        this.addTile();\n        this.updateBoard();\n        document.querySelector(\".message-win\").classList.add(\"hidden\");\n        document.querySelector(\".message-lose\").classList.add(\"hidden\");\n        document.querySelector(\".message-start\").classList.add(\"hidden\");\n        document.querySelector(\".start\").textContent = \"Restart\";\n    }\n    restart() {\n        this.board = this.createBoard();\n        this.score = 0;\n        this.addTile();\n        this.addTile();\n        this.updateBoard();\n        document.querySelector(\".message-win\").classList.add(\"hidden\");\n        document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    }\n    updateBoard() {\n        const cells = document.querySelectorAll(\".field-cell\");\n        let i = 0;\n        for(let row = 0; row < this.size; row++)for(let col = 0; col < this.size; col++){\n            cells[i].textContent = this.board[row][col] !== 0 ? this.board[row][col] : \"\";\n            cells[i].className = \"field-cell\";\n            if (this.board[row][col] !== 0) cells[i].classList.add(`field-cell--${this.board[row][col]}`);\n            i++;\n        }\n        document.querySelector(\".game-score\").textContent = this.score;\n    }\n    transpose() {\n        this.board = this.board[0].map((_, colIndex)=>this.board.map((row)=>row[colIndex]));\n    }\n    checkWin() {\n        return this.board.some((row)=>row.includes(2048));\n    }\n    isGameOver() {\n        for(let row = 0; row < this.size; row++)for(let col = 0; col < this.size; col++){\n            if (this.board[row][col] === 0) return false;\n            if (col < this.size - 1 && this.board[row][col] === this.board[row][col + 1]) return false;\n            if (row < this.size - 1 && this.board[row][col] === this.board[row + 1][col]) return false;\n        }\n        return true;\n    }\n    move(direction) {\n        let moved = false;\n        switch(direction){\n            case \"ArrowLeft\":\n                moved = this.moveLeft();\n                break;\n            case \"ArrowRight\":\n                moved = this.moveRight();\n                break;\n            case \"ArrowUp\":\n                moved = this.moveUp();\n                break;\n            case \"ArrowDown\":\n                moved = this.moveDown();\n                break;\n        }\n        if (moved) {\n            this.addTile();\n            this.updateBoard();\n            const stat = this.getStatus();\n            if (stat === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n            else if (stat === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n        }\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($a5fd07fa01589658$exports)))();\n// Запуск гри\n$09e991522ca7e64e$var$game.updateBoard();\n// Додавання обробників подій\ndocument.addEventListener(\"keydown\", (e)=>{\n    const allowedKeys = [\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\"\n    ];\n    if (allowedKeys.includes(event.key)) $09e991522ca7e64e$var$game.move(e.key);\n});\ndocument.querySelector(\".start\").addEventListener(\"click\", ()=>{\n    $09e991522ca7e64e$var$game.start();\n});\n\n\n//# sourceMappingURL=index.b2c0c447.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\n// Запуск гри\ngame.updateBoard();\n\n// Додавання обробників подій\ndocument.addEventListener('keydown', (e) => {\n  const allowedKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n\n  if (allowedKeys.includes(event.key)) {\n    game.move(e.key);\n  }\n});\n\ndocument.querySelector('.start').addEventListener('click', () => {\n  game.start();\n});\n","'use strict';\n\nclass Game {\n  constructor(size = 4) {\n    this.size = size;\n    this.board = this.createBoard();\n    this.score = 0;\n    // this.start();\n  }\n\n  createBoard() {\n    return Array(this.size)\n      .fill()\n      .map(() => Array(this.size).fill(0));\n  }\n\n  addTile() {\n    const emptyTiles = [];\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.board[row][col] === 0) {\n          emptyTiles.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyTiles.length > 0) {\n      const { row, col } =\n        emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n\n      this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  moveLeft() {\n    let moved = false;\n\n    for (let row = 0; row < this.size; row++) {\n      let newRow = this.board[row].filter((val) => val);\n\n      for (let col = 0; col < newRow.length - 1; col++) {\n        if (newRow[col] === newRow[col + 1]) {\n          newRow[col] *= 2;\n          this.score += newRow[col];\n          newRow[col + 1] = 0;\n          moved = true;\n        }\n      }\n      newRow = newRow.filter((val) => val);\n\n      while (newRow.length < this.size) {\n        newRow.push(0);\n      }\n\n      if (!moved) {\n        moved = this.board[row].toString() !== newRow.toString();\n      }\n      this.board[row] = newRow;\n    }\n\n    return moved;\n  }\n\n  moveRight() {\n    this.board = this.board.map((row) => row.reverse());\n\n    const moved = this.moveLeft();\n\n    this.board = this.board.map((row) => row.reverse());\n\n    return moved;\n  }\n\n  moveUp() {\n    this.transpose();\n\n    const moved = this.moveLeft();\n\n    this.transpose();\n\n    return moved;\n  }\n\n  moveDown() {\n    this.transpose();\n\n    const moved = this.moveRight();\n\n    this.transpose();\n\n    return moved;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    if (this.checkWin()) {\n      return 'win';\n    }\n\n    if (this.isGameOver()) {\n      return 'lose';\n    }\n\n    return 'playing';\n  }\n\n  start() {\n    this.board = this.createBoard();\n    this.score = 0;\n    this.status = 'playing';\n\n    this.addTile();\n    this.addTile();\n\n    this.updateBoard();\n\n    document.querySelector('.message-win').classList.add('hidden');\n    document.querySelector('.message-lose').classList.add('hidden');\n    document.querySelector('.message-start').classList.add('hidden');\n\n    document.querySelector('.start').textContent = 'Restart';\n  }\n\n  restart() {\n    this.board = this.createBoard();\n    this.score = 0;\n    this.addTile();\n    this.addTile();\n    this.updateBoard();\n    document.querySelector('.message-win').classList.add('hidden');\n    document.querySelector('.message-lose').classList.add('hidden');\n  }\n\n  updateBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n    let i = 0;\n\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        cells[i].textContent =\n          this.board[row][col] !== 0 ? this.board[row][col] : '';\n        cells[i].className = 'field-cell';\n\n        if (this.board[row][col] !== 0) {\n          cells[i].classList.add(`field-cell--${this.board[row][col]}`);\n        }\n        i++;\n      }\n    }\n    document.querySelector('.game-score').textContent = this.score;\n  }\n\n  transpose() {\n    this.board = this.board[0].map((_, colIndex) =>\n      this.board.map((row) => row[colIndex]),);\n  }\n\n  checkWin() {\n    return this.board.some((row) => row.includes(2048));\n  }\n\n  isGameOver() {\n    for (let row = 0; row < this.size; row++) {\n      for (let col = 0; col < this.size; col++) {\n        if (this.board[row][col] === 0) {\n          return false;\n        }\n\n        if (\n          col < this.size - 1 &&\n          this.board[row][col] === this.board[row][col + 1]\n        ) {\n          return false;\n        }\n\n        if (\n          row < this.size - 1 &&\n          this.board[row][col] === this.board[row + 1][col]\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  move(direction) {\n    let moved = false;\n\n    switch (direction) {\n      case 'ArrowLeft':\n        moved = this.moveLeft();\n        break;\n      case 'ArrowRight':\n        moved = this.moveRight();\n        break;\n      case 'ArrowUp':\n        moved = this.moveUp();\n        break;\n      case 'ArrowDown':\n        moved = this.moveDown();\n        break;\n    }\n\n    if (moved) {\n      this.addTile();\n      this.updateBoard();\n\n      const stat = this.getStatus();\n\n      if (stat === 'win') {\n        document.querySelector('.message-win').classList.remove('hidden');\n      } else if (stat === 'lose') {\n        document.querySelector('.message-lose').classList.remove('hidden');\n      }\n    }\n  }\n}\n\nmodule.exports = Game;\n"],"names":["a","$a5fd07fa01589658$exports","$09e991522ca7e64e$var$game","constructor","size","board","createBoard","score","Array","fill","map","addTile","emptyTiles","row","col","push","length","Math","floor","random","moveLeft","moved","newRow","filter","val","toString","moveRight","reverse","moveUp","transpose","moveDown","getScore","getState","getStatus","checkWin","isGameOver","start","status","updateBoard","document","querySelector","classList","add","textContent","restart","cells","querySelectorAll","i","className","_","colIndex","some","includes","move","direction","stat","remove","__esModule","default","addEventListener","e","allowedKeys","event","key"],"version":3,"file":"index.b2c0c447.js.map"}